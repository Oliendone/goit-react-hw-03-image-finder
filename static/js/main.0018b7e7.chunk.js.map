{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Button/Button.js","components/Modal/Modal.js","Utilities/fetch.js","components/App.js","index.js"],"names":["ImageGalleryItem","webformatURL","largeImageURL","alt","imageClick","className","onClick","src","ImageGallery","images","openModal","map","image","key","id","tags","Searchbar","state","inputValue","handleSubmit","e","preventDefault","props","onSubmit","handleInput","setState","target","value","this","type","autoComplete","autoFocus","placeholder","onChange","Component","Button","loadMore","Modal","handleKeyDown","code","toggle","handleClick","nodeName","window","addEventListener","removeEventListener","searchImages","query","page","axios","get","then","response","data","hits","App","loading","error","searchQuery","largeImage","showModal","fetchImages","prevState","catch","message","console","log","finally","scrollTo","top","document","documentElement","offsetHeight","behavior","toggleModal","handleModalWindow","handleSearchFormSubmit","prevProps","color","height","width","timeout","length","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.0018b7e7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function ImageGalleryItem({\r\n  webformatURL,\r\n  largeImageURL,\r\n  alt,\r\n  imageClick,\r\n}) {\r\n  return (\r\n    <li className=\"ImageGalleryItem\" onClick={() => imageClick(largeImageURL)}>\r\n      <img src={webformatURL} alt={alt} className=\"ImageGalleryItem-image\" />\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\n\r\nexport default function ImageGallery({ images, openModal }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <ImageGalleryItem\r\n          key={image.id}\r\n          webformatURL={image.webformatURL}\r\n          largeImageURL={image.largeImageURL}\r\n          alt={image.tags}\r\n          imageClick={openModal}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Searchbar extends Component {\r\n  state = {\r\n    inputValue: '',\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n  };\r\n\r\n  handleInput = e => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n            onChange={this.handleInput}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Button({ loadMore }) {\r\n  return (\r\n    <button className=\"Button\" type=\"button\" onClick={loadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n    window.addEventListener('click', this.handleClick);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n    window.removeEventListener('clikc', this.handleClick);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.toggle();\r\n    }\r\n  };\r\n\r\n  handleClick = e => {\r\n    if (e.target.nodeName === 'DIV') {\r\n      this.props.toggle();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">\r\n          <img src={this.props.image} alt=\"\" />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\nconst key = '18346117-9aafb0c2fea41bcf838806a7d';\r\n\r\nexport default function searchImages(query, page) {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${query}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`,\r\n    )\r\n    .then(response => response.data.hits);\r\n}\r\n","import React, { Component } from 'react';\n\nimport ImageGallery from './ImageGallery/ImageGallery';\nimport Loader from 'react-loader-spinner';\nimport Searchbar from './Searchbar/Searchbar';\nimport Button from './Button/Button';\nimport Modal from './Modal/Modal';\n\nimport searchImages from '../Utilities/fetch';\nimport '../components/styles.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nexport default class App extends Component {\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    page: 1,\n    searchQuery: '',\n    largeImage: '',\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    searchImages(searchQuery, page)\n      .then(images =>\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        })),\n      )\n      .catch(error => {\n        this.setState({ error: error.message });\n        console.log(error);\n      })\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.offsetHeight,\n          behavior: 'smooth',\n        });\n        this.setState({ loading: false });\n      });\n  };\n\n  toggleModal = () => {\n    this.setState(prevState => ({\n      showModal: !prevState.showModal,\n    }));\n  };\n\n  handleModalWindow = largeImage => {\n    this.setState({ largeImage: largeImage });\n    this.toggleModal();\n  };\n\n  handleSearchFormSubmit = query => {\n    this.setState({ searchQuery: query, images: [], page: 1 });\n  };\n\n  render() {\n    const { images, loading, showModal, largeImage } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleSearchFormSubmit} />\n        {loading && (\n          <Loader\n            className=\"Loader\"\n            type=\"Circles\"\n            color=\"#f89656\"\n            height={100}\n            width={100}\n            timeout={3000}\n          />\n        )}\n        {images.length > 0 && (\n          <ImageGallery images={images} openModal={this.handleModalWindow} />\n        )}\n        {images.length > 0 && !loading && (\n          <Button loadMore={this.fetchImages} />\n        )}\n        {showModal && <Modal image={largeImage} toggle={this.toggleModal} />}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}